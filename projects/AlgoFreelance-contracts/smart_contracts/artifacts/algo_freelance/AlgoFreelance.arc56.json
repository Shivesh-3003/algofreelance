{
    "name": "AlgoFreelance",
    "structs": {
        "JobDetails": [
            {
                "name": "client_address",
                "type": "address"
            },
            {
                "name": "freelancer_address",
                "type": "address"
            },
            {
                "name": "escrow_amount",
                "type": "uint64"
            },
            {
                "name": "job_status",
                "type": "uint64"
            },
            {
                "name": "work_hash",
                "type": "string"
            },
            {
                "name": "job_title",
                "type": "string"
            },
            {
                "name": "created_at",
                "type": "uint64"
            },
            {
                "name": "app_id",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "initialize",
            "args": [
                {
                    "type": "address",
                    "name": "client_address"
                },
                {
                    "type": "address",
                    "name": "freelancer_address"
                },
                {
                    "type": "uint64",
                    "name": "escrow_amount"
                },
                {
                    "type": "string",
                    "name": "job_title"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fund",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "submit_work",
            "args": [
                {
                    "type": "string",
                    "name": "ipfs_hash"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "approve_work",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cancel",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_job_details",
            "args": [],
            "returns": {
                "type": "(address,address,uint64,uint64,string,string,uint64,uint64)",
                "struct": "JobDetails"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 7
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "client_address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y2xpZW50X2FkZHJlc3M="
                },
                "freelancer_address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZnJlZWxhbmNlcl9hZGRyZXNz"
                },
                "escrow_amount": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "ZXNjcm93X2Ftb3VudA=="
                },
                "job_status": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "am9iX3N0YXR1cw=="
                },
                "work_hash": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "d29ya19oYXNo"
                },
                "job_title": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "am9iX3RpdGxl"
                },
                "created_at": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Y3JlYXRlZF9hdA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        339
                    ],
                    "errorMessage": "Escrow amount must be greater than 0"
                },
                {
                    "pc": [
                        463
                    ],
                    "errorMessage": "Invalid IPFS hash length"
                },
                {
                    "pc": [
                        644
                    ],
                    "errorMessage": "Job cannot be canceled after work has been submitted"
                },
                {
                    "pc": [
                        383
                    ],
                    "errorMessage": "Job not in Created status"
                },
                {
                    "pc": [
                        435
                    ],
                    "errorMessage": "Job not in Funded status"
                },
                {
                    "pc": [
                        485
                    ],
                    "errorMessage": "Job not in Submitted status"
                },
                {
                    "pc": [
                        396
                    ],
                    "errorMessage": "Must be grouped with a payment transaction"
                },
                {
                    "pc": [
                        184,
                        242,
                        254,
                        266,
                        281,
                        293
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        493
                    ],
                    "errorMessage": "Only client can approve work"
                },
                {
                    "pc": [
                        655
                    ],
                    "errorMessage": "Only client can cancel"
                },
                {
                    "pc": [
                        391
                    ],
                    "errorMessage": "Only client can fund"
                },
                {
                    "pc": [
                        443
                    ],
                    "errorMessage": "Only freelancer can submit work"
                },
                {
                    "pc": [
                        333
                    ],
                    "errorMessage": "Only the creator can initialize the contract"
                },
                {
                    "pc": [
                        419
                    ],
                    "errorMessage": "Payment amount must match escrow amount"
                },
                {
                    "pc": [
                        409
                    ],
                    "errorMessage": "Payment must be to the contract"
                },
                {
                    "pc": [
                        661
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        322
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        187,
                        245,
                        257,
                        269,
                        284,
                        296
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        389,
                        491,
                        650,
                        692
                    ],
                    "errorMessage": "check self.client_address exists"
                },
                {
                    "pc": [
                        719
                    ],
                    "errorMessage": "check self.created_at exists"
                },
                {
                    "pc": [
                        416,
                        502,
                        700
                    ],
                    "errorMessage": "check self.escrow_amount exists"
                },
                {
                    "pc": [
                        441,
                        498,
                        696
                    ],
                    "errorMessage": "check self.freelancer_address exists"
                },
                {
                    "pc": [
                        379,
                        431,
                        481,
                        640,
                        704
                    ],
                    "errorMessage": "check self.job_status exists"
                },
                {
                    "pc": [
                        520,
                        714
                    ],
                    "errorMessage": "check self.job_title exists"
                },
                {
                    "pc": [
                        528,
                        709
                    ],
                    "errorMessage": "check self.work_hash exists"
                },
                {
                    "pc": [
                        402
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAAECJgoKam9iX3N0YXR1cw5jbGllbnRfYWRkcmVzcxJmcmVlbGFuY2VyX2FkZHJlc3MNZXNjcm93X2Ftb3VudAl3b3JrX2hhc2gJam9iX3RpdGxlCmNyZWF0ZWRfYXQIAAAAAAAAAAAIAAAAAAAAAAEIAAAAAAAAAAIxG0EAuIIGBIkGMrEE6Ykr7wTgMdpwBEDDBn8EMfJqmwTQ5j8BNhoAjgYAbwBjAFQASAA8AAIiQzEZFEQxGESIAfJPB08HUE8GUE8FUIACAGRQSwQVgWQIFlcGAlBPAlBMUE8CUExQgAQVH3x1TFCwI0MxGRREMRhEiAGEI0MxGRREMRhEiADZI0MxGRREMRhENhoBiACVI0MxGRREMRhEiABYI0MxGRREMRhENhoBNhoCNhoDNhoEiAANI0MxGUD/dDEYFEQjQ4oEADEAMgkSRCIWi/6kRCmL/Gcqi/1nK4v+ZycFi/9nMgcWJwZMZygnB2cnBIACAABniSIoZUQnB6hEMQAiKWVEEkQyBCQSRCM4ECMSRCM4BzIKEkQjOAgiK2VEFxJEKCcIZ4mKAQAiKGVEJwioRDEAIiplRBJEi/8VSYEuD0EAFIsAgTsOQQAMI0QnBIv/ZygnCWeJIkL/8SIoZUQnCahEMQAiKWVEEkSxIiplRCIrZUQXsghJsgcjshAisgGzIicFZURXAgAiJwRlRFcCALGAD0FsZ29GcmVlbGFuY2U6IE8CUIAHaXBmczovL08CUDIDRwOyLLIrsiqyKbIngAdQT1dDRVJUsiWyJiKyIyOyIoEDshAisgGztDyxI7ISshGyFIEEshAisgGzKIAIAAAAAAAAAANniSIoZUQXJAxEMQAiKWVETEsBEkSxMgpzAEQyAQmyCLIHI7IQIrIBsyiACAAAAAAAAAAEZ4kiKWVEIiplRCIrZUQiKGVEIicEZUQiJwVlRCInBmVEMggWiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}